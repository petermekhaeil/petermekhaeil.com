---
import { ChartTotalVisits } from '../../components/ChartTotalVisits';
import BaseLayout from '../../layouts/base.astro';
import { neon } from '@neondatabase/serverless';

export const prerender = false;

const sql = neon(import.meta.env.DATABASE_URL);

interface AnalyticsData {
  id: number;
  date: string;
  path: string;
  referrer: string;
  country: string;
  city: string;
}

interface GroupedData {
  [key: string]: { date: Date; day: string; month: string; total: number };
}

interface GroupedReferrers {
  [key: string]: { referrer: string; total: number };
}

let table: AnalyticsData[] = [];

try {
  const response = await sql`
    SELECT * FROM analytics
    WHERE date >= NOW() - INTERVAL '30 days'`;

  if (!response.length) {
    throw new Error('Bad request');
  }

  table = response as AnalyticsData[];

  table = table.filter(
    (item) => item.city !== 'Mock City' && !item.referrer.includes('localhost')
  );
} catch (error) {
  console.error(error);
}

const groupByDate = (array: Array<{ date: string }>) => {
  const groupedData: GroupedData = array.reduce((acc, item) => {
    const date = new Date(item.date);
    const day = date.getDate().toString().padStart(2, '0');
    const month = new Intl.DateTimeFormat('en', { month: 'short' }).format(
      date
    );
    const key = `${day}-${month}`;

    if (!acc[key]) {
      acc[key] = {
        date: date,
        day: day,
        month: month,
        total: 0
      };
    }

    // @ts-expect-error - TS doesn't know that acc[key] exists
    acc[key].total++;

    return acc;
  }, {} as GroupedData);

  return Object.keys(groupedData).map((key) => groupedData[key]);
};

const groupByReferrer = (array: Array<{ referrer: string }>) => {
  const groupedData: GroupedReferrers = array.reduce((acc, item) => {
    const { referrer } = item;
    const url =
      referrer !== null && referrer.includes('petermekhaeil.com')
        ? 'https://petermekhaeil.com'
        : referrer;
    const key = url;

    if (!acc[key]) {
      acc[key] = {
        referrer: url,
        total: 0
      };
    }

    // @ts-expect-error - TS doesn't know that acc[key] exists
    acc[key].total++;

    return acc;
  }, {} as GroupedReferrers);

  return Object.keys(groupedData)
    .map((key) => groupedData[key])
    .filter((item) => item?.referrer !== null);
};

console.log(JSON.stringify(groupByReferrer(table), null, 2));
---

<BaseLayout>
  <h1 class="mb-1 text-2xl font-bold">Analytics</h1>
  {
    table ? (
      <>
        <h2 class="my-8 text-xl font-bold">Total Visits</h2>
        <ChartTotalVisits client:only data={groupByDate(table)} />

        <h2 class="my-8 text-xl font-bold">Top Referrers</h2>
        <div class="py-2 font-medium text-gray-500">
          <span class="grid grid-cols-8">
            <span class="col-span-7">Referrers</span>
            <span class="col-span-1">Count</span>
          </span>
          <ul>
            {groupByReferrer(table)
              .filter((item) => item?.referrer !== '')
              .map((item) => (
                <li class="transition-[background-color] hover:bg-gray-100 active:bg-gray-200">
                  <span class="grid grid-cols-8 gap-2 border-t border-gray-200 py-4">
                    <time class="col-span-7 text-gray-500">
                      {item?.referrer}
                    </time>
                    <span class="col-span-1">{item?.total}</span>
                  </span>
                </li>
              ))}
          </ul>
        </div>
      </>
    ) : null
  }
</BaseLayout>
