---
interface Props {
  title?: string | undefined;
  description?: string | undefined;
  subTitle?: string | undefined;
}

const {
  title = 'Peter Mekhaeil',
  description = 'Peter is a software engineer with a focus on optimizing performance and delivering a seamless user experience.'
} = Astro.props;

const urlStr = Astro.url.toString();
const urlWithTrailingSlash = urlStr.endsWith('/') ? urlStr : urlStr + '/';
const opengraphImageUrl = new URL(`./opengraph-image`, urlWithTrailingSlash);
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta
    name="google-site-verification"
    content="RVy6l7HbXQLZfIbXYPj3rU_0DCMcuJtQgDC4q83xoes"
  />

  <title>{title}</title>
  <meta name="description" content={description} />

  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={opengraphImageUrl.toString()} />
  <meta property="og:image:type" content="image/png" />
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />

  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:site" content="@petermekh" />
  <meta name="twitter:creator" content="@petermekh" />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={description} />
  <meta name="twitter:image" content={opengraphImageUrl.toString()} />

  <link rel="icon" type="image/png" href="/assets/icon.png" />
</head>
